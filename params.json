{
  "name": "Gridmvcmasterdetail",
  "tagline": "Sample app to demo master-details grid functionality using Grid.Mvc",
  "body": "# GridMvcMasterDetail\r\nSample app to demo master-details grid functionality using Grid.Mvc\r\n\r\n## Steps\r\n### 1. Nuget install Grid.Mvc\r\n### 2. Setup the Index action to return a list of Departments\r\n\r\n    public ActionResult Index()\r\n    {\r\n        var departments = BuildDepartmentsList();\r\n        return View(departments);\r\n    }\r\n\r\n### 3. Add the following code to the page that holds the master grid i.e. setup the Index view\r\n    <div class=\"row\">\r\n        @Html.Grid(Model).Named(\"departmentsGrid\").Columns(columns =>\r\n        {\r\n            columns.Add(dept => dept.Id).Titled(\"Department ID\").SetWidth(110).Sortable(true);\r\n            columns.Add(dept => dept.Name).Titled(\"Department Name\").SetWidth(200);\r\n        }).WithPaging(20)\r\n    </div>\r\n    <div class=\"row\">\r\n        <div id=\"employees-grid\"></div>\r\n    </div>\r\n    @section CustomStyles\r\n    {\r\n        <link href=\"@Url.Content(\"~/Content/Gridmvc.css\")\" rel=\"stylesheet\" type=\"text/css\"/>\r\n    }\r\n\r\n    @section scripts\r\n    {\r\n        <script src=\"@Url.Content(\"~/Scripts/gridmvc.min.js\")\" type=\"text/javascript\"></script>\r\n        <script type=\"text/javascript\">\r\n            $(function() {\r\n                pageGrids.departmentsGrid.onRowSelect(function(e) {\r\n                    $.ajax({\r\n                        type: 'GET',\r\n                        url: '/Home/EmployeesGrid/' + e.row.Id,\r\n                        success: function(data) {\r\n                            $('#employees-grid').html(data);\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n        </script>\r\n    }\r\n\r\nThe script is setting up an event handler function to fire when a row is selected.\r\n### 4. Action to retrieve the details grid\r\n\r\n    public ActionResult EmployeesGrid(int id)\r\n    {\r\n        var employeesInDepartment = BuildEmployeesList().Where(emp => emp.DepartmentId == id);\r\n        return PartialView(employeesInDepartment);\r\n    }\r\n\r\n### 5. Details view - EmployeesGrid.cshtml partial view\r\n\r\n    @using GridMvc.Html\r\n    @model IEnumerable<GridMvcMasterDetail.Models.Employee>\r\n  \r\n    @{\r\n        Layout = null;\r\n    }\r\n\r\n    <h3>Employees in Department ID: @Html.Raw(Model.Select(p => p.DepartmentId).FirstOrDefault())</h3>\r\n\r\n    @Html.Grid(Model).Named(\"employeesGrid\").Columns(columns =>\r\n    {\r\n        columns.Add(emp => emp.Id).Titled(\"Employee ID\").SetWidth(70);\r\n        columns.Add(emp => emp.Name).Titled(\"Employee Name\").SetWidth(110);\r\n        columns.Add(emp => emp.Age).Titled(\"Age\").SetWidth(60);\r\n    })\r\n\r\n# Demo is here",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}